$default: (
	svgSize: 60px,
	strokeWidth: 2px,
	backgroundColor: #305556,
	foregroundColor: #79be9b,
	labelColor: #c6e8d7,
	labelFontSize: 1rem,
	duration: 1s,
	animationDelay: 1s
);

$configs: (
	php: map-merge($default, (percentage: 95)),
	js: map-merge($default, (percentage: 85)),
	css: map-merge($default, (percentage: 75)),
	html: map-merge($default, (percentage: 95)),
	mysql: map-merge($default, (percentage: 75)),
);


/* ------- DO NOT EDIT BELOW --------- */
$pi: 3.14;
$labelData: '';
@for $i from 0 to 101 {
	$labelData: $labelData + $i + '%' + '\a';
}

figure.circle {
	display: inline-block;
	margin-left: 20px;
	&.first {
		margin-left: 0;
	}
}


@each $chart, $param in $configs {

	$c: (map-get($param, svgSize) - map-get($param, strokeWidth)) * $pi;
	$cOffSet: (map-get($param, percentage)/100)*$c;

	.#{$chart} {
		width: map-get($param, svgSize);
		height: map-get($param, svgSize);
		margin: 0;
		position: relative;

		&.animate {
			svg .circle-foreground {
				animation: offset map-get($param, duration) ease-in-out forwards;
				animation-delay: map-get($param, animationDelay);
			}
			figcaption:after {
				animation: #{$chart}-label map-get($param, duration) steps(map-get($param, percentage)) forwards;
				animation-delay: map-get($param, animationDelay);
			}
		}

		svg {
			width: 100%;
			height: 100%;
			text {
				fill: map-get($param, labelColor);
				font-size: map-get($param, labelFontSize)*0.75
			}
			.circle-background {
				r: (map-get($param, svgSize) - map-get($param, strokeWidth))/2;
				cx: 50%;
				cy: 50%;
				fill: none;
				stroke: map-get($param, backgroundColor);
				stroke-width: map-get($param, strokeWidth);
			}
			.circle-foreground {
				@extend .circle-background;
				stroke: map-get($param, foregroundColor);
				stroke-dasharray: $cOffSet $c;
				stroke-dashoffset: $cOffSet;
				stroke-linecap: round;
				transform-origin: 50% 50%;
				transform: rotate(-90deg);
			}
		}

		figcaption {
			display: inline-block;
			width: 100%;
			height: map-get($param, labelFontSize);
			overflow: hidden;
			text-align: center;
			color: map-get($param, labelColor);
			position: absolute;
			top: calc(40% - #{map-get($param, labelFontSize)/2});
			left: 0;
			font-size: 0;
			&:after {
				display: inline-block;
				content: $labelData;
				white-space: pre;
				font-size: map-get($param, labelFontSize);
				line-height: map-get($param, labelFontSize);
			}
		}
	}
	@keyframes #{$chart}-label {
		100% {
			transform: translateY(map-get($param, labelFontSize) * (-(map-get($param, percentage))));
		}
	}
}
@keyframes offset {
	100% {
		stroke-dashoffset: 0;
	}
}

